/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 modelDraco.glb
Author: NepsterCZ (https://sketchfab.com/NepsterCZ)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/star-wars-red-reaper-harrower-class-a5ca72b9e280496586e5424d82df128c
Title: Star Wars - Red Reaper | Harrower-class
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";

export default function Model(props) {
  const { nodes, materials } = useGLTF("/scene.gltf");
  return (
    <group {...props} dispose={null} rotation={[30, 180, 120]} scale={0.28}>
      <mesh
        geometry={nodes.Harrower_0.geometry}
        material={materials.Details03}
      />
      <mesh geometry={nodes.Harrower_1.geometry} material={materials.Trims01} />
      <mesh
        geometry={nodes.Harrower_2.geometry}
        material={materials.Panels02}
      />
      <mesh
        geometry={nodes.Harrower_3.geometry}
        material={materials.Panels01}
      />
      <mesh
        geometry={nodes.Harrower_4.geometry}
        material={materials.Details02}
      />
      <mesh
        geometry={nodes.Harrower_5.geometry}
        material={materials.Details01}
      />
      <mesh
        geometry={nodes.Harrower_6.geometry}
        material={materials.Forcefield}
      />
    </group>
  );
}

useGLTF.preload("/scene.gltf");
// import React, { useRef } from "react";
// import { Canvas } from "@react-three/fiber";
// import * as THREE from "three";
// import { OrbitControls } from "@react-three/drei";

// function Globe() {
//   const meshRef = useRef();

//   const textureLoader = new THREE.TextureLoader();
//   const globeTexture = textureLoader.load(
//     "https://www.solarsystemscope.com/textures/download/8k_earth_daymap.jpg"
//   );

//   return (
//     <Canvas>
//       <OrbitControls
//         zoomSpeed={0.5}
//         zoom0={1}
//         minZoom={3}
//         maxZoom={1.2}
//         rotateSpeed={0.3}
//         maxPolarAngle={180}
//         setPolarAngle={30}
//         scale={0.1}
//       />
//       <ambientLight intensity={0.5} />
//       <directionalLight />
//       <pointLight position={[10, 10, 10]} />
//       <mesh ref={meshRef}>
//         <sphereBufferGeometry args={[1, 100, 100]} />
//         <meshStandardMaterial map={globeTexture} />
//       </mesh>
//     </Canvas>
//   );
// }

// export default Globe;
